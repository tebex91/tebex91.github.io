{"version":3,"sources":["components/header/index.js","components/header/header.js","components/main-page/greeting.js","components/main-page/info.js","services/rickmortiapi-service.js","components/main-page/summary.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/rick.jpg","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/random-character/random-character.js","components/random-character/index.js","components/row/index.js","components/row/row.js","components/main-page/index.js","components/main-page/main-page.js","components/item-page/index.js","components/item-page/item-page.js","components/item-details-with-image/item-details-with-image.js","components/item-details-with-image/index.js","components/item-details/index.js","components/item-details/item-details.js","components/record/index.js","components/record/record.js","components/rm-components/rm-details.js","components/item-list/index.js","components/item-list/item-list.js","components/pagination/index.js","components/pagination/pagination.js","components/list-container/index.js","components/list-container/list-container.js","components/hoc/withData.js","components/rm-components/rm-lists.js","components/rm-pages/rm-pages.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","className","to","Greeting","Info","href","RickMortyApiService","_apiBase","_apiEndPoint","getResource","url","a","fetch","res","ok","Error","status","json","getItemsNumber","info","count","getCharacterNumber","getLocationNumber","getEpisodeNumber","getAllCharacters","page","results","map","_transformCharacter","getCharacter","id","getAllLocations","_transformLocation","getLocation","getAllEpisodes","_transformEpisode","getEpisode","_extractNumber","item","type","regExp","parseInt","match","character","image","name","toLowerCase","species","gender","location","dimension","residentsNum","residents","length","episode","airDate","air_date","seasonNum","episodeNum","Summary","rickMortyApiService","state","characterNum","locationNum","setNum","getData","field","then","num","setState","catch","this","Component","Spinner","ErrorIndicator","src","icon","alt","RandomCharacter","loading","onCharacterLoaded","error","onError","onLoading","updateCharacter","Math","round","random","interval","setInterval","clearInterval","hasData","spinner","errorMessage","content","ViewCharacter","statusClass","Row","left","right","MainPage","ItemPage","selectedItem","onItemSelected","props","ListContainer","ItemDetails","ItemDetailsWithImage","updateItem","itemId","prevProps","ViewItem","detailsTitle","details","Children","children","child","React","cloneElement","Record","label","RichMortyApiService","CharacterDetails","EpisodeDetails","LocationDetails","ItemList","data","elements","value","onClick","Pagination","listPosition","onPaginationBtnClick","btn","pageNum","paginationData","offset","maxOffset","newListPosition","setStyle","overPoint","color","createList","itemList","onPageSelected","clazzName","selected","paginationList","listPositionStyle","increaseBtnStyle","decreaseBtnStyle","style","selectedPage","getPaginationData","getItemNum","Array","ceil","_","i","changeItem","arr","findPoint","isSelected","idx","findIndex","slice","clearArr","newArr","List","pageId","withData","View","onItemListLoaded","updateItemList","list","withChildFunction","Wrapped","fn","renderName","CharacterList","LocationList","EpisodeList","CharacterListContainer","LocationListContainer","EpisodeListContainer","CharacterPage","LocationPage","EpisodePage","App","path","exact","component","render","ReactDOM","document","getElementById"],"mappings":"0fAEeA,G,MCGA,WACX,OACI,sBAAKC,UAAU,kCAAf,UACQ,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eAAvB,4BACA,qBAAIA,UAAU,oBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,cAA9B,0BAEJ,oBAAID,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,aAA9B,yBAEJ,oBAAID,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,YAA9B,gCCLTC,G,MARE,WACb,OACI,qBAAKF,UAAU,WAAf,SACI,iDAAmB,sBAAMA,UAAU,eAAhB,4BAAnB,gBCiBGG,G,MApBF,WACT,OACI,sBAAKH,UAAU,iBAAf,UACI,8BACI,sBAAMA,UAAU,eAAhB,4BADJ,gXAOA,oRAKA,4BAAG,mBAAGA,UAAU,aAAaI,KAAK,+CAA/B,kC,gCCnBMC,E,iDAEjBC,SAAW,kC,KACXC,aAAe,S,KAEfC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACQC,MAAM,GAAD,OAAI,EAAKL,UAAT,OAAoBG,IADjC,WACJG,EADI,QAEDC,GAFC,sBAGA,IAAIC,MAAJ,0BAA6BL,EAA7B,6BAAqDG,EAAIG,SAHzD,gCAKHH,EAAII,QALD,2C,2DAQdC,e,uCAAiB,WAAOR,GAAP,eAAAC,EAAA,sEACK,EAAKF,YAAL,UAAoBC,IADzB,cACPG,EADO,yBAENA,EAAIM,KAAKC,OAFH,2C,2DAKjBC,mB,sBAAqB,sBAAAV,EAAA,sEACJ,EAAKO,eAAe,cADhB,mF,KAIrBI,kB,sBAAoB,sBAAAX,EAAA,sEACH,EAAKO,eAAe,aADjB,mF,KAIpBK,iB,sBAAmB,sBAAAZ,EAAA,sEACF,EAAKO,eAAe,YADlB,mF,KAInBM,iB,sBAAmB,0CAAAb,EAAA,6DAAOc,EAAP,+BAAc,EAAd,SACG,EAAKhB,YAAL,oBAA8B,EAAKD,cAAnC,OAAkDiB,IADrD,cACTZ,EADS,yBAERA,EAAIa,QACNC,IAAI,EAAKC,sBAHC,2C,KAMnBC,a,uCAAe,WAAOC,GAAP,eAAAnB,EAAA,sEACO,EAAKF,YAAL,qBAA+BqB,IADtC,cACLjB,EADK,yBAEJ,EAAKe,oBAAoBf,IAFrB,2C,2DAKfkB,gB,sBAAkB,0CAAApB,EAAA,6DAAOc,EAAP,+BAAc,EAAd,SACI,EAAKhB,YAAL,mBAA6B,EAAKD,cAAlC,OAAiDiB,IADrD,cACRZ,EADQ,yBAEPA,EAAIa,QACNC,IAAI,EAAKK,qBAHA,2C,KAMlBC,Y,uCAAc,WAAOH,GAAP,eAAAnB,EAAA,sEACQ,EAAKF,YAAL,oBAA8BqB,IADtC,cACJjB,EADI,yBAEH,EAAKmB,mBAAmBnB,IAFrB,2C,2DAKdqB,e,sBAAiB,0CAAAvB,EAAA,6DAAOc,EAAP,+BAAc,EAAd,SACK,EAAKhB,YAAL,kBAA4B,EAAKD,cAAjC,OAAgDiB,IADrD,cACPZ,EADO,yBAENA,EAAIa,QACNC,IAAI,EAAKQ,oBAHD,2C,KAMjBC,W,uCAAa,WAAON,GAAP,eAAAnB,EAAA,sEACS,EAAKF,YAAL,mBAA6BqB,IADtC,cACHjB,EADG,yBAEF,EAAKsB,kBAAkBtB,IAFrB,2C,2DAKbwB,eAAiB,SAACC,EAAMC,GACpB,IAAMC,EAAkB,WAATD,EAAoB,aAAe,YAClD,OAAOE,SAASH,EAAKI,MAAMF,GAAQ,K,KAGvCZ,oBAAsB,SAACe,GACnB,MAAO,CACHb,GAAIa,EAAUb,GACdpB,IAAKiC,EAAUC,MACfC,KAAMF,EAAUE,KAChB7B,OAAQ2B,EAAU3B,OAAO8B,cACzBC,QAASJ,EAAUI,QACnBC,OAAQL,EAAUK,OAClBC,SAAUN,EAAUM,SAASJ,O,KAIrCb,mBAAqB,SAACiB,GAClB,MAAO,CACHnB,GAAImB,EAASnB,GACbe,KAAMI,EAASJ,KACfN,KAAMU,EAASV,KACfW,UAAWD,EAASC,UACpBC,aAAcF,EAASG,UAAUC,S,KAIzClB,kBAAoB,SAACmB,GACjB,MAAO,CACHxB,GAAIwB,EAAQxB,GACZe,KAAMS,EAAQT,KACdU,QAASD,EAAQE,SACjBC,UAAW,EAAKpB,eAAeiB,EAAQA,QAAS,UAChDI,WAAY,EAAKrB,eAAeiB,EAAQA,QAAS,cC1FxCK,G,kNACjBC,oBAAsB,IAAItD,E,EAE1BuD,MAAQ,CACJC,aAAc,KACdC,YAAa,KACbL,WAAY,M,EAehBM,OAAS,SAACC,EAASC,GACfD,IACKE,MAAK,SAACC,GAAD,OAAS,EAAKC,SAAL,eACVH,EAAQE,OAEZE,OAAM,kBAAM,S,kEAjBA,IAAD,EAKZC,KAAKX,oBAHLvC,EAFY,EAEZA,mBACAC,EAHY,EAGZA,kBACAC,EAJY,EAIZA,iBAGJgD,KAAKP,OAAO3C,EAAoB,gBAChCkD,KAAKP,OAAO1C,EAAmB,eAC/BiD,KAAKP,OAAOzC,EAAkB,gB,+BAYvB,IAAD,EAC0CgD,KAAKV,MAA9CC,EADD,EACCA,aAAcC,EADf,EACeA,YAAaL,EAD5B,EAC4BA,WAClC,OACI,sBAAKzD,UAAU,oBAAf,UACI,qEACA,+BACI,+BAAK6D,EAAL,iBACA,+BAAKC,EAAL,gBACA,+BAAKL,EAAL,kBAEJ,wDAA0B,mBAAGzD,UAAU,aAAaI,KAAK,+BAA/B,2C,GAxCLmE,cCLtBC,G,MCGC,WACZ,OACI,qBAAKxE,UAAU,qCAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,gCACI,wBACA,wBACA,wBACA,wBACA,wBACA,iCCdL,G,MAAA,IAA0B,kCCC1ByE,ECIQ,WACnB,OACI,sBAAKzE,UAAU,kBAAf,UACI,sBAAMA,UAAU,eAAhB,mBACA,sBAAMA,UAAU,eAAhB,kCACA,qBAAK0E,IAAKC,EAAMC,IAAI,mBCFXC,G,kNAEjBlB,oBAAsB,IAAItD,E,EAE1BuD,MAAQ,CACJlB,UAAW,GACXoC,SAAS,G,EAYbC,kBAAoB,SAACrC,GACjB,EAAK0B,SAAS,CACV1B,YACAoC,SAAS,EACTE,OAAO,K,EAIfC,QAAU,WACN,EAAKb,SAAS,CACVU,SAAS,EACTE,OAAO,K,EAIfE,UAAY,WACR,EAAKd,SAAS,CACVU,SAAS,K,EAIjBK,gBAAkB,WACd,EAAKD,YACL,IAAMrD,EAAKuD,KAAKC,MAAM,GAAsB,IAAhBD,KAAKE,UACjC,EAAK3B,oBACA/B,aAAaC,GACbqC,KAAK,EAAKa,mBACVV,MAAM,EAAKY,U,kEAnChBX,KAAKa,kBACLb,KAAKiB,SAAWC,YAAYlB,KAAKa,gBAAiB,O,6CAIlDM,cAAcnB,KAAKiB,Y,+BAiCb,IAAD,EAC+BjB,KAAKV,MAAlClB,EADF,EACEA,UAAWoC,EADb,EACaA,QAASE,EADtB,EACsBA,MACrBU,IAAYZ,GAAWE,GACvBW,EAAUb,EAAU,cAAC,EAAD,IAAc,KAClCc,EAAeZ,EAAQ,cAAC,EAAD,IAAqB,KAC5Ca,EAAUH,EAAU,cAAC,EAAD,CAAehD,UAAWA,IAAgB,KAEpE,OACI,sBAAK1C,UAAU,oCAAf,UACK2F,EACAC,EACAC,S,GA3D4BtB,cAiEvCuB,EAAgB,SAAC,GAAiB,IAAhBpD,EAAe,EAAfA,UACbjC,EAAgDiC,EAAhDjC,IAAKmC,EAA2CF,EAA3CE,KAAM7B,EAAqC2B,EAArC3B,OAAQ+B,EAA6BJ,EAA7BI,QAASC,EAAoBL,EAApBK,OAAQC,EAAYN,EAAZM,SACrC+C,EAA0B,UAAXhF,EAAqB,QACV,SAAXA,EAAoB,MAAQ,SACjD,OACI,eAAC,WAAD,WACI,qBAAKf,UAAU,kBAAkB4E,IAAI,SAChCF,IAAKjE,IACV,sBAAKT,UAAU,iBAAf,UACI,oBAAIA,UAAU,eAAd,SAA8B4C,IAC9B,sBAAK5C,UAAU,gBAAf,UACI,qBAAKA,UAAW+F,IAChB,8BAAIhF,EAAJ,MAAe+B,QAEnB,sBAAK9C,UAAU,qBAAf,UACI,sBAAMA,UAAU,aAAhB,qBACA,4BAAI+C,OAER,sBAAK/C,UAAU,wBAAf,UACI,sBAAMA,UAAU,aAAhB,kCACA,4BAAIgD,cC5FT6B,ICAAmB,G,MCGH,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAChB,OACI,sBAAKlG,UAAU,4BAAf,UACI,qBAAKA,UAAU,WAAf,SACKiG,IAEL,qBAAKjG,UAAU,WAAf,SACKkG,SCVFC,ECME,WACb,OACI,eAAC,WAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAKF,KAAM,cAAC,EAAD,IAAaC,MAAO,cAAC,EAAD,UCX5BE,G,kNCKXxC,MAAQ,CACJyC,aAAc,M,EAGlBC,eAAiB,SAACzE,GACd,EAAKuC,SAAS,CACViC,aAAcxE,K,uDAIZ,IAAD,EACgCyC,KAAKiC,MAAnCC,EADF,EACEA,cAAeC,EADjB,EACiBA,YACfJ,EAAgB/B,KAAKV,MAArByC,aACP,OACI,cAAC,EAAD,CAAKJ,KAAM,cAACO,EAAD,CAAeF,eAAgBhC,KAAKgC,iBAC1CJ,MAAO,cAACO,EAAD,CAAaJ,aAAcA,U,GAhBV9B,cCCpBmC,G,kNAEjB9C,MAAQ,CACJvB,KAAM,KACNyC,SAAS,G,EAcbG,QAAU,WACN,EAAKb,SAAS,CACVU,SAAS,EACTE,OAAO,K,EAIfE,UAAY,WACR,EAAKd,SAAS,CACVU,SAAS,K,EAIjB6B,WAAa,WAAO,IAAD,EACW,EAAKJ,MAAxBK,EADQ,EACRA,OAAQ5C,EADA,EACAA,QACV4C,GAIL5C,EAAQ4C,GACH1C,MAAK,SAAC7B,GACH,EAAK+B,SAAS,CACV/B,KAAMA,EACNyC,SAAS,EACTE,OAAO,OAGdX,MAAM,EAAKY,U,kEArChBX,KAAKqC,e,yCAGUE,GACZvC,KAAKiC,MAAMK,SAAWC,EAAUD,SAC/BtC,KAAKY,YACLZ,KAAKqC,gB,+BAmCH,IAAD,EAC0BrC,KAAKV,MAA7BvB,EADF,EACEA,KAAMyC,EADR,EACQA,QAASE,EADjB,EACiBA,MAEtB,IAAI3C,EACA,OAAO,gEAGX,IAAMqD,IAAYZ,GAAWE,GACvBW,EAAUb,EAAU,cAAC,EAAD,IAAc,KAClCc,EAAeZ,EAAQ,cAAC,EAAD,IAAqB,KAC5Ca,EAAUH,EAAU,cAAC,EAAD,CAAUrD,KAAMA,IAAW,KAErD,OACI,sBAAKrC,UAAU,oCAAf,UACK2F,EACAC,EACAC,S,GAjEiCtB,cAuE5CuC,EAAW,SAAC,GAAY,IAAXzE,EAAU,EAAVA,KACR5B,EAAgD4B,EAAhD5B,IAAKmC,EAA2CP,EAA3CO,KAAM7B,EAAqCsB,EAArCtB,OAAQ+B,EAA6BT,EAA7BS,QAASC,EAAoBV,EAApBU,OAAQC,EAAYX,EAAZW,SACrC+C,EAA0B,UAAXhF,EAAqB,QAC3B,SAAXA,EAAoB,MAAQ,SAChC,OACI,eAAC,WAAD,WACI,qBAAKf,UAAU,kBAAkB4E,IAAI,SAChCF,IAAKjE,IACV,sBAAKT,UAAU,iBAAf,UACI,oBAAIA,UAAU,eAAd,SAA8B4C,IAC9B,sBAAK5C,UAAU,gBAAf,UACI,qBAAKA,UAAW+F,IAChB,8BAAIhF,EAAJ,MAAe+B,QAEnB,sBAAK9C,UAAU,qBAAf,UACI,sBAAMA,UAAU,aAAhB,qBACA,4BAAI+C,OAER,sBAAK/C,UAAU,wBAAf,UACI,sBAAMA,UAAU,aAAhB,kCACA,4BAAIgD,cChGT0D,ICAAD,G,kNCKX7C,MAAQ,CACJvB,KAAM,M,EAaV4C,QAAU,WACN,EAAKb,SAAS,CACVY,OAAO,K,EAIf2B,WAAa,WAAO,IAAD,EACW,EAAKJ,MAAxBK,EADQ,EACRA,OAAQ5C,EADA,EACAA,QACV4C,GAIL5C,EAAQ4C,GACH1C,MAAK,SAAC7B,GACH,EAAK+B,SAAS,CACV/B,KAAMA,EACN2C,OAAO,OAGdX,MAAM,EAAKY,U,kEA5BhBX,KAAKqC,e,yCAGUE,GACZvC,KAAKiC,MAAMK,SAAWC,EAAUD,QAC/BtC,KAAKqC,e,+BA2BH,IAAD,EACiBrC,KAAKV,MAApBvB,EADF,EACEA,KAAM2C,EADR,EACQA,MACN+B,EAAgBzC,KAAKiC,MAArBQ,aAEP,IAAI1E,EACA,OAAO,gEAGX,IAAM2E,EAAW,eAAC,WAAD,WACb,oBAAIhH,UAAU,aAAd,SAA4BqC,EAAKO,OACjC,6BAEQqE,WAASvF,IAAI4C,KAAKiC,MAAMW,UAAU,SAACC,GAC/B,OAAOC,IAAMC,aAAaF,EAAO,CAAC9E,iBAM5CwD,EAAUb,EAAQ,cAAC,EAAD,IAAqBgC,EAE7C,OACI,sBAAKhH,UAAU,wCAAf,UACI,qBAAKA,UAAU,cAAf,SAA8B+G,IAC9B,qBAAK/G,UAAU,YAAf,SACK6F,W,GA/DoBtB,cCJ1B+C,G,MCGA,SAAC,GAA0B,IAAzBjF,EAAwB,EAAxBA,KAAM4B,EAAkB,EAAlBA,MAAOsD,EAAW,EAAXA,MAC5B,OACI,+BAAI,uBAAMvH,UAAU,aAAhB,UAA8BuH,EAA9B,OAAJ,IAAkDlF,EAAK4B,QCCvDN,EAAsB,IAAI6D,EAG5B5F,EAGA+B,EAHA/B,aACAI,EAEA2B,EAFA3B,YACAG,EACAwB,EADAxB,WAGEsF,EAAmB,SAAC,GAAoB,IAAnBpB,EAAkB,EAAlBA,aACvB,OAAO,cAAC,EAAD,CAAsBrC,QAASpC,EACTgF,OAAQP,KAGnCqB,EAAiB,SAAC,GAAoB,IAAnBrB,EAAkB,EAAlBA,aACrB,OAAO,eAAC,EAAD,CAAarC,QAAS7B,EACPyE,OAAQP,EACRU,aAAa,UAF5B,UAGH,cAAC,EAAD,CAAQQ,MAAM,WAAWtD,MAAM,YAC/B,cAAC,EAAD,CAAQsD,MAAM,SAAStD,MAAM,cAC7B,cAAC,EAAD,CAAQsD,MAAM,UAAUtD,MAAM,mBAIhC0D,EAAkB,SAAC,GAAoB,IAAnBtB,EAAkB,EAAlBA,aACtB,OAAO,eAAC,EAAD,CAAarC,QAAShC,EACT4E,OAAQP,EACRU,aAAa,WAF1B,UAGH,cAAC,EAAD,CAAQQ,MAAM,OAAOtD,MAAM,SAC3B,cAAC,EAAD,CAAQsD,MAAM,YAAYtD,MAAM,cAChC,cAAC,EAAD,CAAQsD,MAAM,sBAAsBtD,MAAM,qB,OCnCnC2D,G,MCGG,SAACrB,GAAW,IACnBsB,EAAkCtB,EAAlCsB,KAAMX,EAA4BX,EAA5BW,SAAUZ,EAAkBC,EAAlBD,eACjBwB,EAAWD,EAAKnG,KAAI,SAACW,GAAU,IAC1BR,EAAMQ,EAANR,GACDkG,EAAQb,EAAS7E,GACvB,OACI,oBACI2F,QAAS,kBAAM1B,EAAezE,IAC9B7B,UAAU,oEAFd,SAGK+H,GAHIlG,MAQjB,OACI,qBAAK7B,UAAU,YAAf,SACI,oBAAIA,UAAU,aAAd,SACK8H,Q,QCpBFG,G,kNCIXrE,MAAQ,CACJsE,aAAc,G,EAGlBC,qBAAuB,SAACC,GACpB,IAAMC,EAAU,EAAK9B,MAAM+B,eAAelF,OACpCmF,EAAiB,aAARH,EAAqB,IAAM,GACpCI,GAAgB,IAAMH,EAAU,GAEtC,EAAKjE,UAAS,YAAqB,IAAnB8D,EAAkB,EAAlBA,aACNO,EAAkBP,EAAeK,EACvC,OAAIE,GAAmB,GAAKA,GAAmBD,EACpC,CACHN,aAAcO,GAGX,CACHP,aAAcA,O,EAM9BQ,SAAW,SAACN,GACR,IAAMI,GAAgB,IAAM,EAAKjC,MAAM+B,eAAelF,OAAS,GACzDuF,EAAoB,aAARP,EAAqBI,EAAY,EACnD,MAAO,CACHI,MAAO,EAAKhF,MAAMsE,eAAkBS,EAAY,YAAc,U,EAItEE,WAAa,SAACC,GAAc,IACjBC,EAAkB,EAAKxC,MAAvBwC,eACP,OAAOD,EAASpH,KAAI,YAAwB,IAAtB6F,EAAqB,EAArBA,MACZyB,EADiC,EAAdC,SACG,qBAAuB,YACnD,OAAO,oBAAIjJ,UAAWgJ,EACXhB,QAAS,kBAAMe,EAAexB,IADlC,SAEFA,GAFiCA,O,uDAOpC,IAAD,OACEe,EAAkBhE,KAAKiC,MAAvB+B,eAEP,IAAKA,EACD,OAAO,KAGX,IAAMY,EAAiB5E,KAAKuE,WAAWP,GAEvC,GAAGA,EAAelF,QAAU,EACxB,OACI,qBAAKpD,UAAU,oBAAf,SACI,oBAAIA,UAAU,uBAAd,SACKkJ,MAbZ,IAmBEhB,EAAgB5D,KAAKV,MAArBsE,aAEDiB,EAAoB,CACtBlD,KAAK,GAAD,OAAKiC,EAAL,OAGFkB,EAAmB9E,KAAKoE,SAAS,YACjCW,EAAmB/E,KAAKoE,SAAS,YAGvC,OACI,sBAAK1I,UAAU,oBAAf,UACI,qBAAKA,UAAU,iBACVsJ,MAAOD,EACPrB,QAAS,kBAAM,EAAKG,qBAAqB,aAF9C,kBAGA,qBAAKnI,UAAU,4BAAf,SACI,oBAAIA,UAAU,uBAAuBsJ,MAAOH,EAA5C,SACKD,MAGT,qBAAKlJ,UAAU,iBACVsJ,MAAOF,EACPpB,QAAS,kBAAM,EAAKG,qBAAqB,aAF9C,yB,GAlFwB5D,cCHzBiC,E,4MCIX5C,MAAQ,CACJ0E,eAAgB,KAChBiB,aAAc,G,EAOlBC,kBAAoB,YAEZC,EADiB,EAAKlD,MAAnBkD,cAEFvF,MAAK,SAAAC,GACF,EAAKC,UAAS,SAACR,GAOX,MAAO,CACH0E,eAPS,YAAIoB,MAAMtE,KAAKuE,KAAKxF,EAAM,MAAMzC,KAAI,SAACkI,EAAEC,GAChD,MAAO,CACHtC,QAASsC,EACTZ,SAAUY,IAAMjG,EAAM2F,wBAQrClF,OAAO,kBAAM,EAAKD,SAAS,CACxBY,OAAO,Q,EAInB8E,WAAa,SAACC,EAAKC,EAAWC,GAC1B,IAAMC,EAAMH,EAAII,WAAU,SAAC9H,GAAD,OAAUA,EAAKkF,QAAUyC,KACnD,MAAM,GAAN,mBACOD,EAAIK,MAAM,EAAGF,IADpB,4BAEQH,EAAIG,IAFZ,IAEkBjB,SAAUgB,KAF5B,YAGOF,EAAIK,MAAMF,EAAM,M,EAI3BnB,eAAiB,SAACxB,GAAW,IAAD,EACe,EAAK3D,MAArC0E,EADiB,EACjBA,eAAgBiB,EADC,EACDA,aACjBQ,EAAG,YAAOzB,GACV+B,EAAW,EAAKP,WAAWC,EAAKR,GAAc,GAC9Ce,EAAS,EAAKR,WAAWO,EAAU9C,GAAM,GAE/C,EAAKnD,SAAS,CACVkE,eAAgBgC,EAChBf,aAAchC,K,kEAzClBjD,KAAKkF,sB,+BA6CC,IAAD,EACkClF,KAAKV,MAArC2F,EADF,EACEA,aAAcjB,EADhB,EACgBA,eADhB,EAG0BhE,KAAKiC,MAA7BgE,EAHF,EAGEA,KAAMjE,EAHR,EAGQA,eACb,OACI,sBAAKtG,UAAU,iBAAf,UACI,cAACuK,EAAD,CAAMjE,eAAgBA,EAAgBkE,OAAQjB,IAC9C,cAAC,EAAD,CACIjB,eAAgBA,EAChBS,eAAgBzE,KAAKyE,wB,GA9DExE,aCwD5BkG,EAxDE,SAACC,EAAM1G,GACpB,mNAEIJ,MAAQ,CACJkF,SAAU,MAHlB,EAgBI6B,iBAAmB,SAAC7B,GAChB,EAAK1E,SAAS,CACV0E,WACA9D,OAAO,KAnBnB,EAuBIC,QAAU,WACN,EAAKb,SAAS,CACVY,OAAO,KAzBnB,EA6BI4F,eAAiB,WACb5G,EAAQ,EAAKuC,MAAMiE,QACdtG,KAAK,EAAKyG,kBACVtG,MAAM,EAAKY,UAhCxB,kEAOQX,KAAKsG,mBAPb,yCAUuB/D,GACXvC,KAAKiC,MAAMiE,SAAW3D,EAAU2D,QAChClG,KAAKsG,mBAZjB,+BAmCc,IAAD,EACqBtG,KAAKV,MAAxBkF,EADF,EACEA,SAAU9D,EADZ,EACYA,MAEjB,IAAI8D,EACA,OAAO,KAGX,IAAM+B,EAAO,cAACH,EAAD,2BAAUpG,KAAKiC,OAAf,IAAsBsB,KAAMiB,KAEnCjD,EAAUb,EAAQ,cAAC,EAAD,IAAqB6F,EAE7C,OACI,cAAC,WAAD,UACKhF,QAhDjB,GAAsBtB,cCGpBZ,EAAsB,IAAI6D,EAG5BjG,EAMAoC,EANApC,iBACAO,EAKA6B,EALA7B,gBACAG,EAIA0B,EAJA1B,eACAb,GAGAuC,EAHAvC,mBACAC,GAEAsC,EAFAtC,kBACAC,GACAqC,EADArC,iBAGEwJ,GAAoB,SAACC,EAASC,GAChC,OAAO,SAACzE,GACJ,OAAO,cAACwE,EAAD,2BAAaxE,GAAb,aACFyE,OAKPC,GAAa,SAACpB,GAAD,OAAO,4BAAIA,EAAEjH,QAI1BsI,GAAgBT,EAASK,GAAkBlD,EAAUqD,IAAa1J,GAElE4J,GAAeV,EAASK,GAAkBlD,EAAUqD,IAAanJ,GAEjEsJ,GAAcX,EAASK,GAAkBlD,GAPlB,SAACiC,GAAD,OAAO,8BAAIA,EAAEjH,KAAN,IAAY,uBAAM5C,UAAU,aAAhB,qBAAsC6J,EAAEhI,YAORI,GAE1EoJ,GAAyB,SAAC9E,GAC5B,OAAO,cAAC,EAAD,2BACSA,GADT,IAEKgE,KAAMW,GACNzB,WAAYrI,OAGtBkK,GAAwB,SAAC/E,GAC3B,OAAO,cAAC,EAAD,2BACSA,GADT,IAEKgE,KAAMY,GACN1B,WAAYpI,OAGtBkK,GAAuB,SAAChF,GAC1B,OAAO,cAAC,EAAD,2BACSA,GADT,IAEKgE,KAAMa,GACN3B,WAAYnI,OC3CtBkK,GAAgB,WAClB,OAAO,cAAC,EAAD,CAAUhF,cAAe6E,GAAwB5E,YAAagB,KAInEgE,GAAe,WACjB,OAAO,cAAC,EAAD,CAAUjF,cAAe8E,GAAuB7E,YAAakB,KAGlE+D,GAAc,WAChB,OAAO,cAAC,EAAD,CAAUlF,cAAe+E,GAAsB9E,YAAaiB,KCpBxDiE,I,6KCaP,OACI,cAAC,IAAD,UACI,sBAAK3L,UAAU,MAAf,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4L,KAAK,IAAIC,OAAK,EAACC,UAAW3F,IACjC,cAAC,IAAD,CAAOyF,KAAK,cAAcE,UAAWN,KACrC,cAAC,IAAD,CAAOI,KAAK,aAAaE,UAAWL,KACpC,cAAC,IAAD,CAAOG,KAAK,YAAYE,UAAWJ,KACnC,cAAC,IAAD,CAAOK,OAAQ,kBAAM,iE,GAZhBxH,cCPjCyH,IAASD,OAAO,cAAC,GAAD,IAASE,SAASC,eAAe,W","file":"static/js/main.ae96380e.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nimport './header.css';\n\nconst Header = () => {\n    return (\n        <div className=\"header navbar bg-primary d-flex\">\n                <Link to=\"/\" className=\"navbar-brand\">RICK AND MORTY</Link>\n                <ul className=\"navbar-nav d-flex\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/characters\">Characters</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/locations\">Locations</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/episodes\">Episodes</Link>\n                    </li>\n                </ul>\n        </div>\n    )\n};\n\nexport default Header;","import React from 'react';\n\nimport './greeting.css';\n\nconst Greeting = () => {\n    return (\n        <div className=\"greeting\">\n            <h1>Welcome to the <span className=\"text-success\">RICK AND MORTY</span> world</h1>\n        </div>\n    )\n};\n\nexport default Greeting;","import React from 'react';\n\nimport './info.css';\n\nconst Info = () => {\n    return (\n        <div className=\"info jumbotron\">\n            <p>\n                <span className=\"text-success\">Rick and Morty</span> is an American adult animated science fiction\n                sitcom created by Justin Roiland and Dan Harmon for Cartoon Network's nighttime Adult Swim programming\n                block. The series follows the misadventures of cynical mad scientist Rick Sanchez and his good-hearted\n                but fretful grandson Morty Smith, who split their time between domestic life and interdimensional\n                adventures.\n            </p>\n            <p>\n                The series originated from an animated short parody film of Back to the Future, created by Roiland\n                for Channel 101, a short film festival co-founded by Harmon. The series has been acclaimed by critics\n                for its originality, creativity and humor.\n            </p>\n            <p><a className=\"text-muted\" href=\"https://en.wikipedia.org/wiki/Rick_and_Morty\">/ Wikipedia /</a></p>\n        </div>\n    )\n};\n\nexport default Info;","export default class RickMortyApiService {\n\n    _apiBase = 'https://rickandmortyapi.com/api';\n    _apiEndPoint = '?page=';\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, response status ${res.status}`)\n        }\n        return res.json();\n    };\n\n    getItemsNumber = async (url) => {\n        const res = await this.getResource(`${url}`);\n        return res.info.count\n    };\n\n    getCharacterNumber = async () => {\n        return await this.getItemsNumber('/character');\n    };\n\n    getLocationNumber = async () => {\n        return await this.getItemsNumber('/location');\n    };\n\n    getEpisodeNumber = async () => {\n        return await this.getItemsNumber('/episode');\n    };\n\n    getAllCharacters = async (page = 1) => {\n        const res = await this.getResource(`/character${this._apiEndPoint}${page}`);\n        return res.results\n            .map(this._transformCharacter);\n    };\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`/character/${id}`);\n        return this._transformCharacter(res);\n    };\n\n    getAllLocations = async (page = 1) => {\n        const res = await this.getResource(`/location${this._apiEndPoint}${page}`);\n        return res.results\n            .map(this._transformLocation);\n    };\n\n    getLocation = async (id) => {\n        const res = await this.getResource(`/location/${id}`);\n        return this._transformLocation(res);\n    };\n\n    getAllEpisodes = async (page = 1) => {\n        const res = await this.getResource(`/episode${this._apiEndPoint}${page}`);\n        return res.results\n            .map(this._transformEpisode);\n    };\n\n    getEpisode = async (id) => {\n        const res = await this.getResource(`/episode/${id}`);\n        return this._transformEpisode(res);\n    };\n\n    _extractNumber = (item, type) => {\n        const regExp = type === 'season' ? /([0-9]{2})/ : /([0-9]*)$/;\n        return parseInt(item.match(regExp)[1]);\n    };\n\n    _transformCharacter = (character) => {\n        return {\n            id: character.id,\n            url: character.image,\n            name: character.name,\n            status: character.status.toLowerCase(),\n            species: character.species,\n            gender: character.gender,\n            location: character.location.name\n        }\n    };\n\n    _transformLocation = (location) => {\n        return {\n            id: location.id,\n            name: location.name,\n            type: location.type,\n            dimension: location.dimension,\n            residentsNum: location.residents.length\n        }\n    };\n\n    _transformEpisode = (episode) => {\n        return {\n            id: episode.id,\n            name: episode.name,\n            airDate: episode.air_date,\n            seasonNum: this._extractNumber(episode.episode, 'season'),\n            episodeNum: this._extractNumber(episode.episode, 'episode'),\n        }\n    };\n}\n\n","import React, {Component} from 'react';\n\nimport RickMortyApiService from '../../services/rickmortiapi-service';\n\nimport './summary.css';\n\nexport default class Summary extends Component {\n    rickMortyApiService = new RickMortyApiService();\n\n    state = {\n        characterNum: null,\n        locationNum: null,\n        episodeNum: null\n    };\n\n    componentDidMount() {\n        const {\n            getCharacterNumber,\n            getLocationNumber,\n            getEpisodeNumber\n        } = this.rickMortyApiService;\n\n        this.setNum(getCharacterNumber, 'characterNum');\n        this.setNum(getLocationNumber, 'locationNum');\n        this.setNum(getEpisodeNumber, 'episodeNum')\n    }\n\n    setNum = (getData, field) => {\n        getData()\n            .then((num) => this.setState({\n                [field]: num\n            }))\n            .catch(() => null)\n    };\n\n\n    render () {\n        const {characterNum, locationNum, episodeNum} = this.state;\n        return (\n            <div className=\"summary jumbotron\">\n                <p>Here you can find information about:</p>\n                <ul>\n                    <li>{characterNum} characters</li>\n                    <li>{locationNum} locations</li>\n                    <li>{episodeNum} episodes</li>\n                </ul>\n                <p>All data is taken from <a className=\"text-muted\" href=\"https://rickandmortyapi.com/\">\n                    rickandmortyapi.com</a>\n                </p>\n            </div>\n        )\n    }\n}\n\n","import Spinner from './spinner';\nexport default Spinner;","import React from 'react';\n\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"loadingio-spinner-gear-gxwz86e2l5v\">\n            <div className=\"ldio-amcxzmu8j7\">\n                <div>\n                    <div />\n                    <div />\n                    <div />\n                    <div />\n                    <div />\n                    <div />\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/rick.07c5dd42.jpg\";","import ErrorIndicator from './error-indicator.js';\nexport default ErrorIndicator;","import React from 'react';\n\nimport './error-indicator.css';\nimport icon from './rick.jpg';\n\nconst ErrorIndicator = () => {\n    return (\n        <div className=\"error-indicator\">\n            <span className=\"text-success\">Oops!</span>\n            <span className=\"text-success\">Something went wrong</span>\n            <img src={icon} alt=\"error icon\" />\n        </div>\n    )\n};\n\nexport default ErrorIndicator;","import React, {Component, Fragment} from 'react';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nimport RickMortyApiService from '../../services/rickmortiapi-service';\n\nimport './random-character.css';\n\nexport default class RandomCharacter extends Component {\n\n    rickMortyApiService = new RickMortyApiService();\n\n    state = {\n        character: {},\n        loading: true\n    };\n\n    componentDidMount() {\n        this.updateCharacter();\n        this.interval = setInterval(this.updateCharacter, 10000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    onCharacterLoaded = (character) => {\n        this.setState({\n            character,\n            loading: false,\n            error: false\n        });\n    };\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    };\n\n    onLoading = () => {\n        this.setState({\n            loading: true\n        })\n    };\n\n    updateCharacter = () => {\n        this.onLoading();\n        const id = Math.round(0.5 + Math.random() * 671);\n        this.rickMortyApiService\n            .getCharacter(id)\n            .then(this.onCharacterLoaded)\n            .catch(this.onError);\n    };\n\n    render() {\n        const {character, loading, error} = this.state;\n        const hasData = !(loading || error);\n        const spinner = loading ? <Spinner /> : null;\n        const errorMessage = error ? <ErrorIndicator /> : null;\n        const content = hasData ? <ViewCharacter character={character} /> : null;\n\n        return (\n            <div className=\"random-character jumbotron d-flex\">\n                {spinner}\n                {errorMessage}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst ViewCharacter = ({character}) => {\n    const {url, name, status, species, gender, location} = character;\n    const statusClass = (status === 'alive' ? 'green':\n                         status === 'dead' ? 'red' : 'orange');\n    return (\n        <Fragment>\n            <img className=\"character-image\" alt=\"avatar\"\n                 src={url} />\n            <div className=\"character-info\">\n                <h4 className=\"text-warning\">{name}</h4>\n                <div className=\"status d-flex\">\n                    <div className={statusClass} />\n                    <p>{status} - {species}</p>\n                </div>\n                <div className=\"section first-seen\">\n                    <span className=\"text-muted\">gender:</span>\n                    <p>{gender}</p>\n                </div>\n                <div className=\"section last-location\">\n                    <span className=\"text-muted\">last known location:</span>\n                    <p>{location}</p>\n                </div>\n            </div>\n        </Fragment>\n    )\n};\n","import RandomCharacter from './random-character';\nexport default RandomCharacter;","import Row from './row';\nexport default Row;","import React from 'react';\n\nimport './row.css';\n\nconst Row = ({left, right}) => {\n    return (\n        <div className=\"details-container row mb2\">\n            <div className=\"col-md-6\">\n                {left}\n            </div>\n            <div className=\"col-md-6\">\n                {right}\n            </div>\n        </div>\n    )\n};\n\nexport default Row;","import MainPage from './main-page';\nexport default MainPage;","import React, {Fragment} from 'react';\nimport Greeting from './greeting';\nimport Info from './info';\nimport Summary from './summary';\nimport RandomCharacter from '../random-character';\nimport Row from '../row';\n\nconst MainPage = () => {\n    return (\n        <Fragment>\n            <Greeting />\n            <Info />\n            <Row left={<Summary />} right={<RandomCharacter />} />\n        </Fragment>\n    )\n};\n\nexport default MainPage;","import ItemPage from './item-page';\nexport default ItemPage;","import React, {Component} from 'react';\nimport Row from '../row';\n\nimport './item-page.css';\n\nexport default class EpisodePage extends Component {\n    state = {\n        selectedItem: null\n    };\n\n    onItemSelected = (id) => {\n        this.setState({\n            selectedItem: id\n        })\n    };\n\n    render() {\n        const {ListContainer, ItemDetails} = this.props;\n        const {selectedItem} = this.state;\n        return (\n            <Row left={<ListContainer onItemSelected={this.onItemSelected} />}\n                 right={<ItemDetails selectedItem={selectedItem} />} />\n        )\n    }\n}","import React, {Component, Fragment} from 'react';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nimport './item-details-withimage.css';\n\nexport default class ItemDetailsWithImage extends Component {\n\n    state = {\n        item: null,\n        loading: true\n    };\n\n    componentDidMount() {\n        this.updateItem();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.itemId !== prevProps.itemId) {\n            this.onLoading();\n            this.updateItem();\n        }\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    };\n\n    onLoading = () => {\n        this.setState({\n            loading: true\n        })\n    };\n\n    updateItem = () => {\n        const {itemId, getData} = this.props;\n        if (!itemId) {\n            return\n        }\n\n        getData(itemId)\n            .then((item) => {\n                this.setState({\n                    item: item,\n                    loading: false,\n                    error: false\n                });\n            })\n            .catch(this.onError);\n    };\n\n\n    render() {\n        const {item, loading, error} = this.state;\n\n        if(!item) {\n            return <span>Select an item from the list</span>\n        }\n\n        const hasData = !(loading || error);\n        const spinner = loading ? <Spinner /> : null;\n        const errorMessage = error ? <ErrorIndicator /> : null;\n        const content = hasData ? <ViewItem item={item} /> : null;\n\n        return (\n            <div className=\"random-character jumbotron d-flex\">\n                {spinner}\n                {errorMessage}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst ViewItem = ({item}) => {\n    const {url, name, status, species, gender, location} = item;\n    const statusClass = (status === 'alive' ? 'green':\n        status === 'dead' ? 'red' : 'orange');\n    return (\n        <Fragment>\n            <img className=\"character-image\" alt=\"avatar\"\n                 src={url} />\n            <div className=\"character-info\">\n                <h4 className=\"text-warning\">{name}</h4>\n                <div className=\"status d-flex\">\n                    <div className={statusClass} />\n                    <p>{status} - {species}</p>\n                </div>\n                <div className=\"section first-seen\">\n                    <span className=\"text-muted\">gender:</span>\n                    <p>{gender}</p>\n                </div>\n                <div className=\"section last-location\">\n                    <span className=\"text-muted\">last known location:</span>\n                    <p>{location}</p>\n                </div>\n            </div>\n        </Fragment>\n    )\n};\n","import ItemDetailsWithImage from './item-details-with-image';\nexport default ItemDetailsWithImage;","import ItemDetails from './item-details';\nexport default ItemDetails;","import React, {Component, Fragment, Children} from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nimport './item-details.css';\n\nexport default class ItemDetails extends Component {\n    state = {\n        item: null\n    };\n\n    componentDidMount() {\n        this.updateItem();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.itemId !== prevProps.itemId) {\n            this.updateItem();\n        }\n    }\n\n    onError = () => {\n        this.setState({\n            error: true\n        })\n    };\n\n    updateItem = () => {\n        const {itemId, getData} = this.props;\n        if (!itemId) {\n            return\n        }\n\n        getData(itemId)\n            .then((item) => {\n                this.setState({\n                    item: item,\n                    error: false\n                });\n            })\n            .catch(this.onError);\n    };\n\n\n    render() {\n        const {item, error} = this.state;\n        const {detailsTitle} = this.props;\n\n        if(!item) {\n            return <span>Select an item from the list</span>\n        }\n\n        const details = (<Fragment>\n            <h4 className=\"card-title\">{item.name}</h4>\n            <ul>\n                {\n                    Children.map(this.props.children, (child) => {\n                        return React.cloneElement(child, {item})\n                    })\n                }\n            </ul>\n        </Fragment>);\n\n        const content = error ? <ErrorIndicator /> : details;\n\n        return (\n            <div className=\"item-details card border-primary mb-3\">\n                <div className=\"card-header\">{detailsTitle}</div>\n                <div className=\"card-body\">\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n","import Record from './record';\nexport default Record;","import React from 'react';\n\nimport './record.css';\n\nconst Record = ({item, field, label}) => {\n  return (\n      <li><span className=\"text-muted\">{label}:</span> {item[field]}</li>\n  )\n};\n\nexport default Record;","import React from 'react';\nimport ItemDetailsWithImage from '../item-details-with-image';\nimport ItemDetails from '../item-details';\nimport Record from '../record';\n\nimport RichMortyApiService from '../../services/rickmortiapi-service';\n\nconst rickMortyApiService = new RichMortyApiService();\n\nconst {\n    getCharacter,\n    getLocation,\n    getEpisode\n} = rickMortyApiService;\n\nconst CharacterDetails = ({selectedItem}) => {\n    return <ItemDetailsWithImage getData={getCharacter}\n                                 itemId={selectedItem} />\n};\n\nconst EpisodeDetails = ({selectedItem}) => {\n    return <ItemDetails getData={getEpisode}\n                          itemId={selectedItem}\n                          detailsTitle='Episode'>\n        <Record label='air date' field='airDate' />\n        <Record label='season' field='seasonNum' />\n        <Record label='episode' field='episodeNum' />\n    </ItemDetails>\n};\n\nconst LocationDetails = ({selectedItem}) => {\n    return <ItemDetails getData={getLocation}\n                        itemId={selectedItem}\n                        detailsTitle='Location'>\n        <Record label='type' field='type' />\n        <Record label='dimension' field='dimension' />\n        <Record label='number of residents' field='residentsNum' />\n    </ItemDetails>\n};\n\nexport {\n    CharacterDetails,\n    EpisodeDetails,\n    LocationDetails\n}\n","import ItemList from './item-list';\nexport default ItemList;","import React from 'react';\n\nimport './item-list.css';\n\nconst ItemLists = (props) => {\n    const {data, children, onItemSelected} = props;\n    const elements = data.map((item) => {\n        const {id} = item;\n        const value = children(item);\n        return(\n            <li key={id}\n                onClick={() => onItemSelected(id)}\n                className=\"list-group-item d-flex justify-content-between align-items-center\">\n                {value}\n            </li>\n        )\n    });\n\n    return (\n        <div className=\"item-list\">\n            <ul className=\"list-group\">\n                {elements}\n            </ul>\n        </div>\n    )\n};\n\nexport default ItemLists;\n\n","import Pagination from './pagination';\nexport default Pagination;","import React, {Component} from 'react';\n\nimport './pagination.css';\n\nexport default class Pagination extends Component {\n    state = {\n        listPosition: 0,\n    };\n\n    onPaginationBtnClick = (btn) => {\n        const pageNum = this.props.paginationData.length;\n        const offset = btn === 'increase' ? 35 : -35;\n        const maxOffset = - ( 35 * (pageNum - 5) );\n\n        this.setState(({listPosition}) => {\n            const newListPosition = listPosition - offset;\n            if (newListPosition <= 0 && newListPosition >= maxOffset){\n                return {\n                    listPosition: newListPosition,\n                }\n            } else {\n                return {\n                    listPosition: listPosition\n                }\n            }\n        });\n    };\n\n    setStyle = (btn) => {\n        const maxOffset = - ( 35 * (this.props.paginationData.length - 5) );\n        const overPoint = btn === 'increase' ? maxOffset : 0;\n        return {\n            color: this.state.listPosition ===  overPoint ? 'lightgray' : 'black'\n        }\n    };\n\n    createList = (itemList) => {\n        const {onPageSelected} = this.props;\n        return itemList.map(({label, selected}) => {\n            const clazzName= selected ? \"list-item selected\" : \"list-item\";\n            return <li className={clazzName} key={label}\n                       onClick={() => onPageSelected(label)}>\n                {label}\n            </li>\n        });\n    };\n\n    render() {\n        const {paginationData} = this.props;\n\n        if (!paginationData) {\n            return null;\n        }\n\n        const paginationList = this.createList(paginationData);\n\n        if(paginationData.length <= 5) {\n            return (\n                <div className=\"pagination d-flex\">\n                    <ul className=\"pagination-page-list\">\n                        {paginationList}\n                    </ul>\n                </div>\n            )\n        }\n\n        const {listPosition} = this.state;\n\n        const listPositionStyle = {\n            left: `${listPosition}px`\n        };\n\n        const increaseBtnStyle = this.setStyle('increase');\n        const decreaseBtnStyle = this.setStyle('decrease');\n\n\n        return (\n            <div className=\"pagination d-flex\">\n                <div className=\"pagination-btn\"\n                     style={decreaseBtnStyle}\n                     onClick={() => this.onPaginationBtnClick('decrease')}>&laquo;</div>\n                <div className=\"pagination-list-container\">\n                    <ul className=\"pagination-page-list\" style={listPositionStyle}>\n                        {paginationList}\n                    </ul>\n                </div>\n                <div className=\"pagination-btn\"\n                     style={increaseBtnStyle}\n                     onClick={() => this.onPaginationBtnClick('increase')}>&raquo;</div>\n            </div>\n        )\n\n    }\n}\n\n","import ListContainer from './list-container';\nexport default ListContainer;","import React, {Component} from 'react';\nimport Pagination from '../pagination';\n\nexport default class ListContainer extends Component {\n\n    state = {\n        paginationData: null,\n        selectedPage: 1\n    };\n\n    componentDidMount() {\n        this.getPaginationData();\n    }\n\n    getPaginationData = () => {\n        const {getItemNum} = this.props;\n            getItemNum()\n            .then(num => {\n                this.setState((state) => {\n                    const data = [...Array(Math.ceil(num / 20))].map((_,i) => {\n                        return {\n                            label: ++i,\n                            selected: i === state.selectedPage\n                        }\n                    });\n                    return {\n                        paginationData: data\n                    }\n                })\n            })\n            .catch( () => this.setState({\n                error: true\n            }))\n    };\n\n    changeItem = (arr, findPoint, isSelected) => {\n        const idx = arr.findIndex((item) => item.label === findPoint);\n        return [\n            ...arr.slice(0, idx),\n            {...arr[idx], selected: isSelected},\n            ...arr.slice(idx + 1)\n        ];\n    };\n\n    onPageSelected = (label) => {\n        const {paginationData, selectedPage} = this.state;\n        const arr = [...paginationData];\n        const clearArr = this.changeItem(arr, selectedPage, false);\n        const newArr = this.changeItem(clearArr, label,true);\n\n        this.setState({\n            paginationData: newArr,\n            selectedPage: label\n        })\n    };\n\n    render() {\n        const {selectedPage, paginationData} = this.state;\n\n        const {List, onItemSelected} = this.props;\n        return (\n            <div className=\"list-container\">\n                <List onItemSelected={onItemSelected} pageId={selectedPage} />\n                <Pagination\n                    paginationData={paginationData}\n                    onPageSelected={this.onPageSelected} />\n            </div>\n        )\n    }\n}","import React, {Component, Fragment} from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nconst withData = (View, getData) => {\n    return class  extends Component {\n\n        state = {\n            itemList: null,\n        };\n\n        componentDidMount() {\n            this.updateItemList();\n        }\n\n        componentDidUpdate(prevProps) {\n            if (this.props.pageId !== prevProps.pageId) {\n                this.updateItemList();\n            }\n        }\n\n        onItemListLoaded = (itemList) => {\n            this.setState({\n                itemList,\n                error: false\n            })\n        };\n\n        onError = () => {\n            this.setState({\n                error: true\n            })\n        };\n\n        updateItemList = () => {\n            getData(this.props.pageId)\n                .then(this.onItemListLoaded)\n                .catch(this.onError)\n        };\n\n        render() {\n            const {itemList, error} = this.state;\n\n            if(!itemList) {\n                return null;\n            }\n\n            const list = <View {...this.props} data={itemList}/>;\n\n            const content = error ? <ErrorIndicator /> : list;\n\n            return (\n                <Fragment>\n                    {content}\n                </Fragment>\n            )\n        }\n    }\n};\n\nexport default withData;","import React from 'react';\nimport ItemList from '../item-list';\nimport ListContainer from '../list-container';\nimport {withData} from '../hoc';\n\nimport RichMortyApiService from '../../services/rickmortiapi-service';\n\nconst rickMortyApiService = new RichMortyApiService();\n\nconst {\n    getAllCharacters,\n    getAllLocations,\n    getAllEpisodes,\n    getCharacterNumber,\n    getLocationNumber,\n    getEpisodeNumber\n} = rickMortyApiService;\n\nconst withChildFunction = (Wrapped, fn) => {\n    return (props) => {\n        return <Wrapped {...props}>\n            {fn}\n        </Wrapped>\n    }\n};\n\nconst renderName = (i) => <p>{i.name}</p>,\n      renderNameAndEpisode = (i) => <p>{i.name} <span className=\"text-muted\">episode {i.id}</span></p>;\n\n\nconst CharacterList = withData(withChildFunction(ItemList, renderName), getAllCharacters);\n\nconst LocationList = withData(withChildFunction(ItemList, renderName), getAllLocations);\n\nconst EpisodeList = withData(withChildFunction(ItemList, renderNameAndEpisode), getAllEpisodes);\n\nconst CharacterListContainer = (props) => {\n    return <ListContainer\n                {...props}\n                List={CharacterList}\n                getItemNum={getCharacterNumber} />\n};\n\nconst LocationListContainer = (props) => {\n    return <ListContainer\n                {...props}\n                List={LocationList}\n                getItemNum={getLocationNumber} />\n};\n\nconst EpisodeListContainer = (props) => {\n    return <ListContainer\n                {...props}\n                List={EpisodeList}\n                getItemNum={getEpisodeNumber} />\n};\n\nexport {\n    CharacterListContainer,\n    LocationListContainer,\n    EpisodeListContainer\n}","import React from 'react';\nimport ItemPage from '../item-page';\nimport {\n    CharacterListContainer,\n    LocationListContainer,\n    EpisodeListContainer,\n    CharacterDetails,\n    LocationDetails,\n    EpisodeDetails\n} from '../rm-components';\n\nconst CharacterPage = () => {\n    return <ItemPage ListContainer={CharacterListContainer} ItemDetails={CharacterDetails} />\n};\n\n\nconst LocationPage = () => {\n    return <ItemPage ListContainer={LocationListContainer} ItemDetails={LocationDetails} />\n};\n\nconst EpisodePage = () => {\n    return <ItemPage ListContainer={EpisodeListContainer} ItemDetails={EpisodeDetails} />\n};\n\nexport {\n    CharacterPage,\n    LocationPage,\n    EpisodePage\n}","import App from './app';\nexport default App;","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Header from '../header';\nimport MainPage from '../main-page';\nimport {\n    CharacterPage,\n    LocationPage,\n    EpisodePage\n} from '../rm-pages';\n\nimport './app.css';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"app\">\n                    <Header />\n                    <div className=\"container\">\n                        <Switch>\n                            <Route path=\"/\" exact component={MainPage} />\n                            <Route path=\"/characters\" component={CharacterPage} />\n                            <Route path=\"/locations\" component={LocationPage} />\n                            <Route path=\"/episodes\" component={EpisodePage} />\n                            <Route render={() => <h2>Page not found</h2>} />\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}